generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  firstName String   @db.VarChar(255)
  lastName  String   @db.VarChar(255)
  password  String   @db.VarChar(500)
  Order     Order[]
  rating    rating[]
}

model rating {
  userId    Int
  productId Int
  rating    Int
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@id([userId, productId])
}

model Product {
  id          Int                    @id @default(autoincrement())
  title       String                 @unique @db.VarChar(255)
  slug        String                 @unique @db.VarChar(300)
  description String
  url         String                 @db.VarChar(255)
  price       Decimal                @default(0) @db.Decimal(8, 2)
  createdAt   DateTime?              @default(now())
  updatedAt   DateTime?              @updatedAt
  CartItem    CartItem[]
  categories  CategoriesOnProducts[] @relation("ProductOfCate")
  rating      rating[]
}

model Category {
  id       Int                    @id @default(autoincrement())
  title    String                 @unique @db.VarChar(255)
  slug     String                 @unique @db.VarChar(300)
  url      String                 @db.VarChar(255)
  products CategoriesOnProducts[]
}

model CategoriesOnProducts {
  productId     Int
  categoryId    Int
  category      Category      @relation(fields: [categoryId], references: [id])
  product       Product       @relation("ProductOfCate", fields: [productId], references: [id])
  productRating ProductRating @relation(fields: [productId], references: [id], map: "product_rating_pk")

  @@id([productId, categoryId])
}

model Cart {
  uuid      String     @id @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  state     Boolean    @default(false)
  CartItem  CartItem[]
  Order     Order?
}

model CartItem {
  cartId     String
  productId  Int
  quantity   Int
  totalPrice Decimal @db.Money
  cart       Cart    @relation(fields: [cartId], references: [uuid])
  product    Product @relation(fields: [productId], references: [id])

  @@id([cartId, productId])
}

model Order {
  orderId    String    @id
  orderedAt  DateTime  @default(now())
  recievedAt DateTime?
  userId     Int
  cart       Cart      @relation(fields: [orderId], references: [uuid])
  user       User      @relation(fields: [userId], references: [id])
}

view ProductRating {
  id                   Int                    @id
  title                String                 @db.VarChar(255)
  slug                 String                 @db.VarChar(300)
  description          String
  url                  String                 @db.VarChar(255)
  price                Decimal                @db.Decimal(8, 2)
  createdAt            DateTime
  updatedAt            DateTime
  rating               Decimal                @db.Decimal(5, 2)
  total_votes          Int
  CategoriesOnProducts CategoriesOnProducts[]
  sold                 ProductsSold           @relation(fields: [id], references: [id])
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view ProductsSold {
  id            Int            @id
  sold          Int
  ProductRating ProductRating?
}
